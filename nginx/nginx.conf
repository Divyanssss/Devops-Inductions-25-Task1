events {}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    server  {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/ssl/self.crt;    
        ssl_certificate_key /etc/nginx/ssl/self.key;

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }

        location /api/ {
            proxy_pass http://backend:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
            add_header Access-Control-Allow-Headers Content-Type,Authorization;
        }

        location = /createUser {
            proxy_pass http://backend:8080/createUser;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
            add_header Access-Control-Allow-Headers Content-Type,Authorization;
        }

        location = /loginUser {
            proxy_pass http://backend:8080/loginUser;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
            add_header Access-Control-Allow-Headers Content-Type,Authorization;
        }
    } 
} 
    